- hosts: localhost
  become: yes
  become_method: sudo
  become_user: root
  gather_facts: yes
  connection: ssh
  tasks:
    - name: kube user create
      user:
        name: kube
        state: present  
    - name: Create containerd config file
      file:
         path: "/etc/modules-load.d/containerd.conf"
         state: "touch"
    - name: Add conf for containerd
      blockinfile:
         path: "/etc/modules-load.d/containerd.conf"
         block: |
               overlay
               br_netfilter
    - name: modprobe
      shell: |
               sudo modprobe overlay
               sudo modprobe br_netfilter
    - name: Set system configurations for Kubernetes networking
      file:
         path: "/etc/sysctl.d/99-kubernetes-cri.conf"
         state: "touch"
    - name: Add conf for containerd
      blockinfile:
         path: "/etc/sysctl.d/99-kubernetes-cri.conf"
         block: |
                net.bridge.bridge-nf-call-iptables = 1
                net.ipv4.ip_forward = 1
                net.bridge.bridge-nf-call-ip6tables = 1
    - name: Apply new settings
      command: sudo sysctl --system
    - name: install containerd
      shell: |
               sudo apt-get update && sudo apt-get install -y containerd
               sudo mkdir -p /etc/containerd
               sudo containerd config default | sudo tee /etc/containerd/config.toml
               sudo systemctl restart containerd
    - name: swap off
      mount:
        name: "{{ item }}"
        fstype: swap
        state: absent
      with_items:
        - swap           
    - name: Kubernetes signing key
      apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present
      #      shell: curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
    - name: Xenial Kubernetes Repository
      shell:
        cmd: apt-add-repository "deb http://apt.kubernetes.io/ kubernetes-xenial main"
    - name: install kubernetes
      shell: |
               sudo apt-get update
               sudo apt-get install -y kubelet kubeadm kubectl
               sudo apt-mark hold kubelet kubeadm kubectl       
    - name: k8s initialize
      shell: kubeadm init --pod-network-cidr=10.222.0.0/16
      args:
        chdir: $HOME
        creates: cluster_initialized.txt
    - name: create .kube directory
      become: yes
      become_user: kube
      file:
        path: $HOME/.kube
        state: directory
        mode: 0755
    - name: copies admin.conf to user's kube config
      copy:
        src: /etc/kubernetes/admin.conf
        dest: /home/kube/.kube/config
        remote_src: yes
        owner: kube
    - name: install Pod network
      become: yes
      become_user: kube
      shell: kubectl apply -f https://docs.projectcalico.org/manifests/calico.yaml 
      args:
        chdir: $HOME
    - name: Get the token for joining the worker nodes
      become: yes
      become_user: kube
      shell: kubeadm token create  --print-join-command
      register: kubernetes_join_command
      
    - debug:
      msg: "{{ kubernetes_join_command.stdout }}"
      
    - name: Copy join command to local file.
      become: yes
      local_action: copy content="{{ kubernetes_join_command.stdout_lines[0] }}" dest="/tmp/kubernetes_join_command" mode=0777
    - name: config
#      become_user: ubuntu
      become_method: sudo
      shell: |
              mkdir -p $HOME/.kube
              cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
              chown $(id -u):$(id -g) $HOME/.kube/config              
